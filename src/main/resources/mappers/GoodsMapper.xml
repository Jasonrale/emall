<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.emall.dao.GoodsMapper">
	<resultMap id="BaseResultMap" type="com.emall.entity.Goods">
		<id column="goods_id" jdbcType="VARCHAR" property="goodsId"/>
		<result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
		<result column="goods_describe" jdbcType="VARCHAR" property="goodsDescribe"/>
		<result column="category_id" jdbcType="VARCHAR" property="categoryId"/>
		<result column="goods_price" jdbcType="DECIMAL" property="goodsPrice"/>
		<result column="goods_stock" jdbcType="INTEGER" property="goodsStock"/>
		<result column="goods_image" jdbcType="VARCHAR" property="goodsImage"/>
		<result column="goods_details" jdbcType="VARCHAR" property="goodsDetails"/>
		<result column="goods_status" jdbcType="INTEGER" property="goodsStatus"/>
	</resultMap>
	
	<sql id="Base_Column_List">
		goods_id, goods_name, goods_describe, category_id, goods_price, goods_stock, goods_image,
    	goods_details, goods_status
	</sql>
	
	<select id="count" resultType="java.lang.Long">
		select count(1)
		from goods
	</select>

	<select id="countByKeyWord" parameterType="java.lang.String" resultType="java.lang.Long">
		select count(1)
		from goods
		where g_name like #{keyWord,jdbcType=VARCHAR}
	</select>
	
	<select id="queryAll" parameterType="com.emall.utils.PageModel" resultMap="BaseResultMap">
		select g.goods_id, g.goods_name, g.goods_describe, g.category_id, g.goods_price, g.goods_stock, g.goods_image, g.goods_details, g.goods_status
		from goods g
		inner join (select goods_id from goods limit #{limit} offset #{offset}) ids
		on g.goods_id = ids.goods_id
	</select>

	<select id="selectByKeyWord" resultMap="BaseResultMap">
		select g.goods_id, g.goods_name, g.goods_describe, g.category_id, g.goods_price, g.goods_stock, g.goods_image, g.goods_details, g.goods_status
		from goods g
		inner join (select goods_id from goods where g_name like #{keyWord,jdbcType=VARCHAR} limit #{limit} offset #{offset}) ids
		on g.goods_id = ids.goods_id
	</select>
	
	<select id="selectByGoodsId" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from goods
		where goods_id = #{goodsId,jdbcType=VARCHAR}
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete
		from goods
		where goods_id = #{goodsId,jdbcType=VARCHAR}
	</delete>
	
	<insert id="insert" parameterType="com.emall.entity.Goods">
		insert into goods (goods_id, goods_name, goods_describe, category_id, goods_price, goods_stock, goods_image,
						   goods_details, goods_status)
		values (#{goodsId,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, #{goodsDescribe,jdbcType=VARCHAR},
				#{categoryId,jdbcType=VARCHAR}, #{goodsPrice,jdbcType=DECIMAL}, #{goodsStock,jdbcType=INTEGER},
				#{goodsImage,jdbcType=VARCHAR}, #{goodsDetails,jdbcType=VARCHAR}, #{goodsStatus,jdbcType=INTEGER})
	</insert>
	
	<update id="updateByPrimaryKey" parameterType="com.emall.entity.Goods">
		update goods
		set goods_name     = #{goodsName,jdbcType=VARCHAR},
			goods_describe = #{goodsDescribe,jdbcType=VARCHAR},
			category_id    = #{categoryId,jdbcType=VARCHAR},
			goods_price    = #{goodsPrice,jdbcType=DECIMAL},
			goods_stock    = #{goodsStock,jdbcType=INTEGER},
			goods_image    = #{goodsImage,jdbcType=VARCHAR},
			goods_details  = #{goodsDetails,jdbcType=VARCHAR},
			goods_status   = #{goodsStatus,jdbcType=INTEGER}
		where goods_id = #{goodsId,jdbcType=VARCHAR}
  </update>
</mapper>